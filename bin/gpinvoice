#!/bin/sh

set -e

#/ Usage: gpinvoice [-b <branch>] [-r <repo>]
#/   -b branch name (default master)
#/   -r repository path (default ~/.gitpaid)
#/   -h show this help message

. "$(dirname "$(dirname "$0")")/lib/gp.sh"

while getopts b:r:h NAME
do
	case "$NAME" in
		b) BRANCH="$OPTARG";;
		r) REPO="$OPTARG";;
		h)
			grep "^#/" <"$0" | cut -c4- >&2
			exit 0;;
		*)
			grep "^#/" <"$0" | head -n1 | cut -c4- >&2
			exit 1;;
	esac
done

gpinit

echo "# Invoice"
echo
date
echo "from $BRANCH branch of $REPO"
echo
echo "## Work log"

gpworkbegin() {
	echo
	echo "Began: $(git show "$1" --pretty=format:%aD)"
}

gpworkend() {
	echo
	echo "Ended: $(git show "$1" --pretty=format:%aD)"
	AUTHOR_DATE="$(git show "$1" --pretty=format:%at)"
	COMMITTER_DATE="$(git show "$1" --pretty=format:%ct)"
	[ "$AUTHOR_DATE" = "$COMMITTER_DATE" ] && {
		MINUTES="$((($AUTHOR_DATE - $BEGIN) / 60))"
		echo "Billed time: $(gpprettytime "$MINUTES")"
	} || {
		MINUTES="$(($COMMITTER_DATE - 1000000000))"
		echo "Billed time (adjusted): $(gpprettytime "$MINUTES")"
	}
	echo "$MINUTES" >&3
}

HEAD="$(git rev-parse "$BRANCH")"
git rev-list --reverse "$HEAD" | while read COMMIT
do
	COMMITTER="$(git show "$COMMIT" --pretty=format:%cn)"

	# End when work has ended at least once and gpbegin is encountered again.
	[ -n "$ENDED" -a "$COMMITTER" = "gpbegin" ] && {
		gpworkend "$COMMIT"
		BEGIN=
		ENDED=
	}

	# Begin when work has not already begun and gpbegin is encountered.
	[ -z "$BEGIN" -a "$COMMITTER" = "gpbegin" ] && {
		gpworkbegin "$COMMIT"
		BEGIN="$(git show "$COMMIT" --pretty=format:%at)"
	}

	SUBJECT="$(git show "$COMMIT" --pretty=format:%s)"
	BODY="$(git show "$COMMIT" --pretty=format:%b)"
	[ -n "$SUBJECT" -o -n "$BODY" ] && echo
	[ -n "$SUBJECT" ] && echo "$SUBJECT" | xargs echo ">"
	[ -n "$SUBJECT" -a -n "$BODY" ] && echo ">"
	[ -n "$BODY" ] && echo "$BODY" | xargs echo ">"

	# Note that *an* end has been encountered.  It may not be *the* end.
	[ -n "$BEGIN" -a "$COMMITTER" = "gpend" ] && ENDED=1 || true

	[ "$HEAD" = "$COMMIT" ] && case "$COMMITTER" in

		# The tip of the branch is necessarily the end if work has ended
		# and it is an end.
		gpend) gpworkend "$COMMIT";;

		# The tip of the branch is open if it begins work itself.
		gpbegin)
			echo
			echo "(still in progress)";;

	esac

# Sum billable minutes comine from the loop process on file descriptor 3.
done 3>minutes
MINUTES="$(awk '{SUM += $1} END {print SUM}' <minutes)"
rm minutes

echo
echo "## Summary"
echo
echo "Total billed time: $(gpprettytime "$MINUTES")"
